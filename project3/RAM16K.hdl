// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    // Liknand struktur fast bara 4st och då occkså bara en 2-bit sel i dmux/mux.
    DMux4Way(in=load,sel=address[0..1], a=dmux0,b=dmux1,c=dmux2,d=dmux3);//,e=dmux4,f=dmux5,g=dmux6,h=dmux7);

    RAM4K(in=in,load=dmux0,address=address[2..13],out=ram8out0);
    RAM4K(in=in,load=dmux1,address=address[2..13],out=ram8out1);
    RAM4K(in=in,load=dmux2,address=address[2..13],out=ram8out2);
    RAM4K(in=in,load=dmux3,address=address[2..13],out=ram8out3);
    //RAM4K(in=in,load=dmux4,address=address[2..13],out=ram8out4);
    //RAM4K(in=in,load=dmux5,address=address[2..13],out=ram8out5);
    //RAM4K(in=in,load=dmux6,address=address[2..13],out=ram8out6);
    //RAM4K(in=in,load=dmux7,address=address[2..13],out=ram8out7);

    
    // ,e=ram8out4,f=ram8out5,g=ram8out6,h=ram8out7
    Mux4Way16(a=ram8out0,b=ram8out1,c=ram8out2,d=ram8out3,sel=address[0..1],out=out);
}